version: "3.8"

networks:
  app:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:

services:
  backend:
    build:
      context: ./backend_ml
      dockerfile: Dockerfile
    expose:
      - "8000"
    volumes:
      - ./backend_ml/models:/app/models:ro
    networks: [app]
    # Optional healthcheck (expects /health in backend; add if missing)
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 20s
      timeout: 3s
      retries: 5

  lightcurve:
    build:
      context: ./lightcurve
      dockerfile: Dockerfile
    expose:
      - "9000"
    volumes:
      - ./lightcurve/models:/app/models:ro
      - ./lightcurve/data:/app/data:ro
      - ./lightcurve/pixelfiles:/app/pixelfiles:ro
    networks: [app]
    healthcheck:
      test:
        ["CMD-SHELL", "curl -fsS http://localhost:9000/api/v1/health || exit 1"]
      interval: 20s
      timeout: 3s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    networks: [app]
    depends_on:
      - backend
      - lightcurve
    environment:
      # Server-side environment variables for internal service communication
      BACKEND_URL: "http://backend:8000"
      LIGHTCURVE_API_URL: "http://lightcurve:9000"
      # Client-side environment variables for browser requests (via Caddy proxy)
      NEXT_PUBLIC_BACKEND_BASE: "/api"
      NEXT_PUBLIC_LIGHTCURVE_BASE: "/lc"
    # Optional healthcheck if frontend exposes a simple path:
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000 || exit 1"]
      interval: 20s
      timeout: 3s
      retries: 5

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
      - lightcurve
    networks: [app]
